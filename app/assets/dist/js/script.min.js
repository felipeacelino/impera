"use strict";

// URL Base
var url_base = $("#infos").data("url-base"); // DEBOUNCE (Melhora a performance de funções repetitivas como "Scroll / Resize")

var debounce = function debounce(n, t, u) {
  var e;
  return function () {
    var a = this,
        i = arguments,
        o = function o() {
      e = null, u || n.apply(a, i);
    },
        r = u && !e;

    clearTimeout(e), e = setTimeout(o, t), r && n.apply(a, i);
  };
}; // Verifica se o tamanho da tela é menor do que o tamanho passado (Útil em caso de verificação de responsividade)


function isMobileX(screenSize) {
  return $(window).width() < screenSize;
} // Formata um valor para o formato de moeda real (R$)


function formataMoeda(v, c, d, t) {
  var n = v,
      c = isNaN(c = Math.abs(c)) ? 2 : c,
      d = d == undefined ? "," : d,
      t = t == undefined ? "." : t,
      s = n < 0 ? "-" : "",
      i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
      j = (j = i.length) > 3 ? j % 3 : 0;
  return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
} // Copia uma string para a área de transferência


function copyToClipboard(str) {
  var el = document.createElement("textarea");
  el.value = str;
  el.setAttribute("readonly", "");
  el.style.position = "absolute";
  el.style.left = "-9999px";
  document.body.appendChild(el);
  var selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;
  el.select();
  document.execCommand("copy");
  document.body.removeChild(el);

  if (selected) {
    document.getSelection().removeAllRanges();
    document.getSelection().addRange(selected);
  }
} // Converte uma data para o formato BR


function formataDataBr(data) {
  var dataArray = data.split("-");
  return dataArray[2] + "/" + dataArray[1] + "/" + dataArray[0];
} // Converte uma string (BR) para objeto data


function dataToObj(data) {
  var dataArray = data.split("/");
  var dia = parseInt(dataArray[0]);
  var mes = parseInt(dataArray[1]);
  var ano = parseInt(dataArray[2]);
  var dataObj = new Date(ano, mes - 1, dia);
  return dataObj;
} // Obtém um array do range entre duas datas


function getDateRange(data1, data2) {
  var dateRange = [];
  var dia = data1.getDate() < 10 ? "0" + data1.getDate() : data1.getDate();
  var mes = data1.getMonth() + 1;
  mes = mes < 10 ? "0" + mes : mes;
  var ano = data1.getFullYear(); //dateRange.push(ano+'-'+mes+'-'+dia);

  dateRange.push(dia + "/" + mes + "/" + ano);

  while (data1 < data2) {
    var dateNew = new Date(data1.setDate(data1.getDate() + 1));
    dia = dateNew.getDate() < 10 ? "0" + dateNew.getDate() : dateNew.getDate();
    mes = dateNew.getMonth() + 1;
    mes = mes < 10 ? "0" + mes : mes;
    ano = dateNew.getFullYear(); //dateRange.push(ano+'-'+mes+'-'+dia);

    dateRange.push(dia + "/" + mes + "/" + ano);
  }

  return dateRange;
} // Verifica no range selecionado se contém alguma data bloqueada


function rangeInvalido(datasBloqueadas, datasSelecionadas) {
  return datasSelecionadas.some(function (data) {
    return datasBloqueadas.some(function (dataBloqueada) {
      return data === dataBloqueada;
    });
  });
} // Desabilida o clique do botão direito do mouse


function disableRightClick() {
  $(window).on("contextmenu", function (ev) {
    ev.preventDefault();
  });
}

disableRightClick(); // Desabilita a cópia de contéudo

/* $(function () {
  $("body").bind("copy paste", function (ev) {
    ev.preventDefault();
    return false;
  });
}); */
"use strict";

/* =================== LOADING =================== */
// Exibe loading
function showLoading() {
  $('.loading').fadeIn();
} // Oculta loading


function hideLoading() {
  $('.loading').fadeOut();
}
"use strict";

/* =================== MODAL =================== */
// Abre o modal
function openModal(modal) {
  $("body").css("overflow", "hidden");
  $("#" + modal).addClass("open");
} // Fecha o modal


function closeModal(modal) {
  $("body").css("overflow", "auto");
  $("#" + modal).removeClass("open");
} // Abre o modal de alerta


function showAlert(titulo, mensagem, tipo) {
  $("#modal-alert").removeClass("success warning error");
  $("#modal-alert").addClass(tipo);
  $("#alert-titulo").text(titulo);
  $("#alert-texto").html(mensagem);
  openModal("modal-alert");
}

jQuery(document).ready(function ($) {
  // Abre o modal ao clicar no botão
  $(".modal-open").on("click", function (e) {
    e.preventDefault();
    openModal($(this).data("modal"));
  }); // Fecha o modal ao clicar no botão

  $(".modal-close").on("click", function (e) {
    e.preventDefault();
    closeModal($(this).data("modal"));
  }); // Fecha o modal ao clicar em qualquer outro lugar da tela

  $(".modal").on("click", function (e) {
    if (e.target == this && !$(this).hasClass("modal-force")) {
      closeModal($(this).attr("id"));
    }
  }); // Fecha o modal ao pressionar a tecla ESC

  $(document).on("keyup", function (e) {
    if (e.keyCode == 27) {
      $(".modal.open").not(".modal-force").each(function () {
        closeModal($(this).attr("id"));
      });
    }
  });
});
"use strict";

// ------------------------------------
// Tabs
// ------------------------------------
(function () {
  "use strict"; // Variáveis

  var $tabsNavs = $(".tabs-nav-item"); // Evento de click em um item da tab

  $tabsNavs.on("click", function (ev) {
    ev.preventDefault(); // Variáveis

    var $tabItem = $(this);
    var $tab = $tabItem.parent(".tabs-nav").parent(".tabs");
    var contentId = $tabItem.data("tab");
    showTab($tab, contentId);
  });
})(); // Exibe uma tab


function showTab($tab, contentId) {
  // Variáveis
  var $tabNavs = $tab.find(".tabs-nav-item");
  var $tabContens = $tab.find(".tabs-content");
  var $itemNav = $tab.find('.tabs-nav-item[data-tab="' + contentId + '"]');
  var $content = $("#" + contentId); // Exibe a tab

  $tabNavs.removeClass("active");
  $tabContens.removeClass("active");
  $itemNav.addClass("active");
  $content.addClass("active");
}
"use strict";

/* =================== SMOOTH SCROLL (SCROLL SUAVE) =================== */
// Scroll para um determinado elemento
function scrollToX(element) {
  //const offset = isMobileX(760) ? 0 : $(".header").outerHeight();
  var offset = $(".header-full").outerHeight();

  if ($(".pag-anuncio").length > 0) {
    offset += 20;
  }

  if ($(".conta-container").length > 0) {
    offset = $(".conta-header").outerHeight() + 20;
  }

  var top = $(element) ? $(element).offset().top - offset : 0;
  $("html, body").animate({
    scrollTop: top
  }, 500);
} // Verifica se o elemento está visível na tela


function isInViewport(element) {
  var rect = element.getBoundingClientRect();
  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
}

jQuery(document).ready(function ($) {
  // Scroll suave para âncoras
  $('a[href^="#"]:not([href="#"]):not([href="#0"])').click(function (ev) {
    ev.preventDefault();

    if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") || location.hostname == this.hostname) {
      var target = $(this.hash);
      target = target.length ? target : $("[name=" + this.hash.slice(1) + "]");

      if (target.length) {
        scrollToX(target);
        return false;
      }
    }
  }); // Scroll suave para links externos

  $(document).on("ready", function () {
    var urlHash = window.location.href.split("#")[1];

    if (urlHash && urlHash != 0) {
      scrollToX("#" + urlHash);
    }
  });
});
"use strict";

/* =================== HEADER FULL =================== */
jQuery(document).ready(function ($) {
  var header = $('.header-full');

  if (header.length > 0) {
    var toggleHeaderFull = function toggleHeaderFull() {
      var scrollTop = $(window).scrollTop();

      if (scrollTop > 100) {
        header.addClass('active');
      } else {
        header.removeClass('active');
      }
    };

    toggleHeaderFull();
    $(window).on('scroll', debounce(function () {
      toggleHeaderFull();
    }, 10));
  }
});
"use strict";

(function () {
  "use strict";

  $(".faq-pergunta").on("click", function () {
    $(this).next(".faq-resposta").slideToggle();
    $(this).parent(".faq").toggleClass("open");
  });
})();
"use strict";

/* =================== MENU MOBILE =================== */
jQuery(document).ready(function ($) {
  // Open menu
  $('#menu-btn-mobile').on('click', function () {
    toggleNav();
  }); // Open submenu

  $('.has-children').children('a').on('click', function (event) {
    //prevent default clicking on direct children of .has-children 
    event.preventDefault();
    var selected = $(this);
    selected.next('ul').removeClass('is-hidden').end().parent('.has-children').parent('ul').addClass('move-out');
    $('.cd-dropdown-content').scrollTop(0);
  }); // Voltar

  $('.go-back').on('click', function () {
    var selected = $(this),
        visibleNav = $(this).parent('ul').parent('.has-children').parent('ul');
    selected.parent('ul').addClass('is-hidden').parent('.has-children').parent('ul').removeClass('move-out');
    $('.cd-dropdown-content').scrollTop(0);
  }); // Close menu

  $('.cd-dropdown-wrapper').on('click', function (ev) {
    if (ev.target == this) {
      closeNav();
    }
  }); // Close menu on swipe

  $('body').on('swipeleft', function (ev) {
    closeNav();
  }); // Toggle menu

  function toggleNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').toggleClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').toggleClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').toggleClass('active');
    $('#menu-btn-mobile').addClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  } // Open menu


  function openNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').addClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').addClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').addClass('active');
    $('#menu-btn-mobile').addClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  } // Close menu


  function closeNav() {
    var navIsVisible = !$('.cd-dropdown').hasClass('dropdown-is-active') ? true : false;
    $('.cd-dropdown').removeClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-trigger').removeClass('dropdown-is-active', navIsVisible);
    $('.cd-dropdown-wrapper').removeClass('active');
    $('#menu-btn-mobile').removeClass('active');

    if (!navIsVisible) {
      $('.cd-dropdown').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
        $('.has-children ul').addClass('is-hidden');
        $('.move-out').removeClass('move-out');
        $('.is-active').removeClass('is-active');
        $('#menu-btn-mobile').removeClass('active');
      });
    }
  }
});
"use strict";

/* =================== VOLTAR AO TOPO =================== */
jQuery(document).ready(function ($) {
  function toggleGoTop() {
    var scrollTop = $(window).scrollTop();

    if (scrollTop > 100) {
      $(".gotop").addClass("active");
    } else {
      $(".gotop").removeClass("active");
    }
  }

  toggleGoTop();
  $(window).on("scroll", debounce(function () {
    toggleGoTop();
  }, 100));
  $(".gotop").on("click", function () {
    scrollToX("html");
  });
});
"use strict";

/* =================== MÁSCARAS DOS CAMPOS =================== */
// Numérico
$(".number").mask("#"); // VALOR
//$(".valor").mask("000.000.000.000.000,00", { reverse: true });

$(".valor").maskMoney({
  prefix: "R$ ",
  thousands: ".",
  decimal: ",",
  allowZero: true
}).on("change", function () {
  $(this).parsley().validate();
}).on("keyup keydown keypress", function () {
  var $el = $('.campo-valor-txt[data-campo="#' + $(this).attr("id") + '"]');

  if ($el.length > 0) {
    var val = $(this).maskMoney("unmasked")[0];
    var desc = "Reais";
    var colorClass = "reais";

    if (val > 999999999.99) {
      desc = "Bilhões";
      colorClass = "bilhoes";
    } else if (val > 999999.99) {
      desc = "Milhões";
      colorClass = "milhoes";
    } else if (val > 999.99) {
      desc = "Mil";
      colorClass = "mil";
    }

    $el.removeClass("reais bilhoes milhoes mil").addClass(colorClass);
    $el.text(desc);
  }
}); // Data

$(".date").mask("00/00/0000", {
  clearIfNotMatch: true
}); // Horário

$(".time").mask("00:00", {
  clearIfNotMatch: true
}); // CEP

$(".cep").mask("00000-000", {
  clearIfNotMatch: true
}); // Cartão de crédito

$(".card-number").mask("0000 0000 0000 0000"); // Validade do cartão de crédito

$(".card-date").mask("00/00", {
  clearIfNotMatch: true
}); // CPF

$(".cpf").mask("000.000.000-00", {
  clearIfNotMatch: true,
  reverse: true
}); // CNPJ

$(".cnpj").mask("00.000.000/0000-00", {
  clearIfNotMatch: true,
  reverse: true
}); // CPF OU CNPJ

var maskCpfCnpj = function maskCpfCnpj(val) {
  return val.replace(/\D/g, "").length > 11 ? "00.000.000/0000-00" : "000.000.000-009";
};

var optMaskCpfCnpj = {
  onKeyPress: function onKeyPress(val, e, field, options) {
    field.mask(maskCpfCnpj.apply({}, arguments), options);
  }
};
$(".cpf-cnpj").mask(maskCpfCnpj, optMaskCpfCnpj); // Telefone (Com 9 dígitos)

var maskPhoneSP = function maskPhoneSP(val) {
  return val.replace(/\D/g, "").length === 11 ? "(00) 00000-0000" : "(00) 0000-00009";
};

var optMaskPhoneSP = {
  onKeyPress: function onKeyPress(val, e, field, options) {
    field.mask(maskPhoneSP.apply({}, arguments), options);
  },
  clearIfNotMatch: true
};
$(".telefone").mask(maskPhoneSP, optMaskPhoneSP); // Domínio

$(".domain").on("input keydown keyup", function () {
  $(this).val($(this).val().toLowerCase().replace(/\s/g, ""));
}); // Peso

$(".weight").mask("#0,000", {
  reverse: true
}); // Porcentagem

$(".percent").mask("##0,00", {
  reverse: true
}); // Tradução para o pluging 'Datepicker'

var datepickerLocaleBR = {
  format: "DD/MM/YYYY",
  separator: " a ",
  applyLabel: "Aplicar",
  cancelLabel: "Limpar",
  fromLabel: "De",
  toLabel: "a",
  customRangeLabel: "Personalizado",
  daysOfWeek: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
  monthNames: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"]
}; // ------------------------------------
// Datepicker
// ------------------------------------

(function () {
  "use strict"; // Datepicker

  $(".datepicker").each(function () {
    var openDirection = $(this).data("direction") && $(this).data("direction") === "right" ? "left" : "right";
    $(this).daterangepicker({
      singleDatePicker: true,
      autoUpdateInput: false,
      autoApply: true,
      opens: openDirection,
      locale: datepickerLocaleBR
    }).on("apply.daterangepicker", function (ev, picker) {
      $(this).val(picker.startDate.format("DD/MM/YYYY")); //$(this).parsley().validate();
    }).on("cancel.daterangepicker", function (ev, picker) {
      $(this).val("");
    });
  }); // Datepicker Range

  $(".datepicker_range").each(function () {
    var $campo = $(this);
    var openDirection = $campo.data("direction") && $campo.data("direction") === "right" ? "left" : "right";
    $campo.daterangepicker({
      autoUpdateInput: false,
      autoApply: false,
      opens: openDirection,
      locale: datepickerLocaleBR,
      buttonClasses: "btn btn-xs",
      applyButtonClasses: "btn-primario"
    }).on("apply.daterangepicker", function (ev, picker) {
      $(this).val(picker.startDate.format("DD/MM/YYYY") + " a " + picker.endDate.format("DD/MM/YYYY"));
      $(this).parsley().validate();
    }).on("cancel.daterangepicker", function (ev, picker) {
      $campo.val("");
      $(this).parsley().validate();
    });
  }); // Time Picker

  $(".timepicker").each(function () {
    var $input = $(this);
    var min = $input.data("min");
    var max = $input.data("max");
    var cfg = {
      timeFormat: "HH:mm",
      interval: 30,
      dynamic: false,
      dropdown: true,
      scrollbar: true,
      change: function change(time) {
        $input.parsley().validate();
      }
    };

    if (min) {
      cfg.minTime = min;
    }

    if (max) {
      cfg.maxTime = max;
    }

    $(this).timepicker(cfg);
  });
  /* $(".timepicker").each(function () {
    const openDirection =
      $(this).data("direction") && $(this).data("direction") === "right"
        ? "left"
        : "right";
    const timepickerLocaleBR = datepickerLocaleBR;
    timepickerLocaleBR.format = "HH:mm";
    $(this)
      .daterangepicker({
        singleDatePicker: true,
        maxDate: "",
        timePicker: true,
        timePicker24Hour: true,
        autoUpdateInput: false,
        opens: openDirection,
        locale: datepickerLocaleBR,
        buttonClasses: "btn btn-xs",
        applyButtonClasses: "btn-primario",
      })
      .on("show.daterangepicker", function (ev, picker) {
        picker.container.addClass("timepicker");
      })
      .on("apply.daterangepicker", function (ev, picker) {
        $(this).val(picker.startDate.format(timepickerLocaleBR.format));
        $(this).parsley().validate();
      })
      .on("cancel.daterangepicker", function (ev, picker) {
        $(this).val("");
      });
  }); */
})(); // ------------------------------------
// Select2
// ------------------------------------


!function (e) {
  var r = e.fn.select2.amd.require("select2/defaults");

  e.extend(r.defaults, {
    searchInputPlaceholder: ""
  });

  var t = e.fn.select2.amd.require("select2/dropdown/search"),
      a = t.prototype.render;

  t.prototype.render = function (e) {
    var r = a.apply(this, Array.prototype.slice.apply(arguments));
    return this.$search.attr("placeholder", this.options.get("searchInputPlaceholder")), r;
  };
}(window.jQuery);

(function () {
  "use strict"; // Campos

  var $inputs = $(".select2"); // Aplica o plugin nos campos

  $inputs.each(function () {
    var $input = $(this);
    var maximumSelectionLength = $input.data("max") ? parseInt($input.data("max")) : 0;
    var placeholder = $input.data("placeholder") ? $input.data("placeholder") : false;
    var search = $input.data("search") ? true : false;
    var searchPlaceholder = $input.data("src-placeholder") ? $input.data("src-placeholder") : "Pesquisar...";
    var dropdownCssClass = $input.data("dropdown-class") != "" ? $input.data("dropdown-class") : "";
    var options = {
      width: "100%",
      language: "pt-BR",
      dropdownCssClass: dropdownCssClass,
      maximumSelectionLength: maximumSelectionLength,
      searchInputPlaceholder: searchPlaceholder
    };

    if (!search) {
      options.minimumResultsForSearch = -1;
    }

    if (placeholder) {
      options.placeholder = placeholder;
    }

    $input.select2(options).on("change.select2", function (ev) {
      $(ev.currentTarget).parsley().validate();
    });
  });
})(); // ------------------------------------
// Grupo de Botões (Radio/Checkbox)
// ------------------------------------


(function () {
  "use strict";

  $(".btn-group-toggle input").on("change", function () {
    var $input = $(this);
    var $btn = $input.parent(".btn");
    var $btnGroup = $btn.parent(".btn-group-toggle");
    $btnGroup.find(".btn").removeClass("active");
    $btn.addClass("active");
  });
  btnToggleHandle();

  function btnToggleHandle() {
    $(".btn-group-toggle input").each(function () {
      var $input = $(this);
      var $btn = $input.parent(".btn");
      var $btnGroup = $btn.parent(".btn-group-toggle");

      if ($input.is(":checked")) {
        $btnGroup.find(".btn").removeClass("active");
        $btn.addClass("active");
      }
    });
  }
})();
"use strict";

(function ($) {
  "use strict"; // Valida CPF

  function validarCPF(r) {
    var t, a, n, e, i;
    if (i = 1, (r = r.replace(/[^\d]+/g, "")).length < 11) return !1;

    for (e = 0; e < r.length - 1; e++) {
      if (r.charAt(e) != r.charAt(e + 1)) {
        i = 0;
        break;
      }
    }

    if (i) return !1;

    for (t = r.substring(0, 9), a = r.substring(9), n = 0, e = 10; e > 1; e--) {
      n += t.charAt(10 - e) * e;
    }

    if ((n % 11 < 2 ? 0 : 11 - n % 11) != a.charAt(0)) return !1;

    for (t = r.substring(0, 10), n = 0, e = 11; e > 1; e--) {
      n += t.charAt(11 - e) * e;
    }

    return (n % 11 < 2 ? 0 : 11 - n % 11) == a.charAt(1);
  } // Valida CNPJ


  function validarCNPJ(r) {
    if ("" == (r = r.replace(/[^\d]+/g, ""))) return !1;
    if (14 != r.length) return !1;
    if ("00000000000000" == r || "11111111111111" == r || "22222222222222" == r || "33333333333333" == r || "44444444444444" == r || "55555555555555" == r || "66666666666666" == r || "77777777777777" == r || "88888888888888" == r || "99999999999999" == r) return !1;

    for (var t = r.length - 2, n = r.substring(0, t), a = r.substring(t), e = 0, i = t - 7, u = t; u >= 1; u--) {
      e += n.charAt(t - u) * i--, i < 2 && (i = 9);
    }

    var f = e % 11 < 2 ? 0 : 11 - e % 11;
    if (f != a.charAt(0)) return !1;

    for (t += 1, n = r.substring(0, t), e = 0, i = t - 7, u = t; u >= 1; u--) {
      e += n.charAt(t - u) * i--, i < 2 && (i = 9);
    }

    return (f = e % 11 < 2 ? 0 : 11 - e % 11) == a.charAt(1);
  } // Valide CPF ou CNPJ


  function validaCPForCNPJ(value) {
    return validarCPF(value) || validarCNPJ(value);
  } // Nome completo


  window.Parsley.addValidator("fullname", {
    validateString: function validateString(value) {
      var value = value.trim().split(" ");
      return value.length > 1;
    },
    messages: {
      "pt-br": "Digite o nome completo."
    }
  }); // Valida CPF

  window.Parsley.addValidator("cpf", {
    validateString: function validateString(value) {
      return validarCPF(value);
    },
    messages: {
      "pt-br": "Informe um número de CPF válido."
    }
  }); // Valida CNPJ

  window.Parsley.addValidator("cnpj", {
    validateString: function validateString(value) {
      return validarCNPJ(value);
    },
    messages: {
      "pt-br": "Informe um número de CNPJ válido."
    }
  }); // Valida CPF ou CNPJ

  window.Parsley.addValidator("cpf_cnpj", {
    validateString: function validateString(value) {
      return validaCPForCNPJ(value);
    },
    messages: {
      "pt-br": "Informe um número de CPF ou CNPJ válido."
    }
  }); // Verifica um campo com validação externa (Ex: E-mail já cadastrado no sistema)

  window.Parsley.addAsyncValidator("remote", function (resposta) {
    console.log(resposta);
    return resposta.responseText == "ok";
  }); // Tamanho do arquivo

  window.Parsley.addValidator("maxfilesize", {
    validateString: function validateString(value, maxSize, parsleyInstance) {
      var files = parsleyInstance.$element[0].files;
      return files.length != 1 || files[0].size <= maxSize * 1048576;
    },
    requirementType: "integer",
    messages: {
      "pt-br": "Este arquivo não deve ser maior que %s Mb"
    }
  }); // Exibe o 'check' nos campos validados com sucesso

  window.Parsley.on("field:success", function () {
    this.$element.parent(".show-validacao").addClass("valid");
  }).on("field:error", function () {
    this.$element.parent(".show-validacao").removeClass("valid");
  }); // Instancia o validador

  $(".form-validation").parsley(); // Contador de caracter

  $("textarea[maxlength]").each(function () {
    var limite = $(this).attr("maxlength");
    var count = $(this).val().length;
    $(this).after('<span class="caracter_count"></span>');
    var countEle = $(this).next(".caracter_count");
    countEle.text(count + "/" + limite);
  }).on("keyup keydown keypress", function () {
    var limite = $(this).attr("maxlength");
    var count = $(this).val().length;
    var countEle = $(this).next(".caracter_count");
    countEle.text(count + "/" + limite);
  });
})(jQuery);
"use strict";

/* =================== COMPLETA ENDEREÇO =================== */
jQuery(document).ready(function ($) {
  $(".cep_completa").on("change", function () {
    var input = $(this);
    var cep = $(this).val();
    var url = $(this).data("url");
    var loading = input.prev(".campo-loading");
    $.ajax({
      url: url,
      type: "POST",
      data: {
        cep: cep
      },
      beforeSend: function beforeSend() {
        loading.fadeIn();
        input.prop("disabled", true);
      },
      success: function success(data) {
        console.log(data);
        loading.fadeOut();
        input.prop("disabled", false);

        try {
          var endereco = JSON.parse(data);
          $("#logradouro").val(endereco.logradouro);
          $("#bairro").val(endereco.bairro);
          $("#cidade").val(endereco.cidade);
          $("#estado").val(endereco.uf);
          $("#numero").focus();
          $("#logradouro").parsley().validate();
          $("#bairro").parsley().validate();
          $("#cidade").parsley().validate();
          $("#estado").parsley().validate();
        } catch (e) {
          return false;
        }
      },
      error: function error(xhr, type, exception) {
        loading.fadeOut();
        input.prop("disabled", false);
        console.log("ajax error response type " + type);
      }
    });
  });
});
/* =================== COMPLETA ENDEREÇO (CADASTRO DO ANÚNCIO) =================== */

jQuery(document).ready(function ($) {
  var $cep = $(".cep_completa_cad");
  $cep.on("input", handleAddress);

  function handleAddress() {
    var cepLength = $cep.val().replace(/\D/g, "").length;
    $(".campos-endereco").slideUp();

    if (cepLength >= 8) {
      completaEndereco();
    }
  }

  function completaEndereco() {
    var input = $cep;
    var cep = $cep.val();
    var url = $cep.data("url");
    var loading = $cep.prev(".campo-loading");
    $.ajax({
      url: url,
      type: "POST",
      data: {
        cep: cep
      },
      beforeSend: function beforeSend() {
        loading.fadeIn();
        $cep.prop("readonly", true);
      },
      success: function success(data) {
        console.log(data);
        loading.fadeOut();
        $cep.prop("readonly", false);

        try {
          var endereco = JSON.parse(data); //console.log(endereco);

          if (endereco.logradouro != "") {
            // Indisponível ou bloqueado
            if (endereco.disponivel == "1" && endereco.bloqueado == "0") {
              $("#logradouro").val(endereco.logradouro).parsley().validate();
              $("#bairro_id").data("sync-value", endereco.bairro_id);
              $("#cidade_id").val(endereco.cidade_id).trigger("change");
              $("#estado_id").val(endereco.estado_id).trigger("change");
              $("#bairro_nome").val(endereco.bairro);
              $("#cidade_nome").val(endereco.cidade);
              $("#estado_nome").val(endereco.uf);
              $("#numero").focus();
              $(".campos-endereco").slideDown();
              $(".btn-mapa").trigger("click");
            } else {
              showAlert("Atenção", "Infelizmente ainda não trabalhamos com imóveis neste endereço.", "warning");
            }
          } else {
            showAlert("Atenção", "<b>Endereço não encontrado.</b><br> Por favor, verifique o CEP informado.", "warning");
          }
        } catch (e) {
          showAlert("Atenção", "<b>Endereço não encontrado.</b><br> Por favor, verifique o CEP informado.", "warning");
          return false;
        }
      },
      error: function error(xhr, type, exception) {
        loading.fadeOut();
        $cep.prop("readonly", false);
        console.log("ajax error response type " + type);
      }
    });
  }

  $(".form-anuncio #estado_id").on("change", function () {
    $("#estado_nome").val($(this).find("option:selected").text());
  });
  $(".form-anuncio #cidade_id").on("change", function () {
    $("#cidade_nome").val($(this).find("option:selected").text());
  });
  $(".form-anuncio #bairro_id").on("change", function () {
    $("#bairro_nome").val($(this).find("option:selected").text());
  });
});
"use strict";

// Altera a posição da imagem no mobile
$(function () {
  if (isMobileX(1119)) {
    $(".load-img-mobile").each(function () {
      var container = $(this);
      var img = $('[data-id-img="' + container.data("img") + '"]');
      img.attr("data-aos", "");
      img.appendTo(container);
    });
  }
});
"use strict";

(function () {
  "use strict";

  function updateNumberPicker() {
    $(".number-picker-input").each(function () {
      var btnSub = $(this).find(".number-picker-sub");
      var btnAdd = $(this).find(".number-picker-add");
      var input = $(this).find("input");
      var min = Number(input.data("min"));
      var max = Number(input.data("max"));
      var qtde = Number(input.val());

      if (!isNaN(min) && qtde === min) {
        btnSub.addClass("disabled");
      } else {
        btnSub.removeClass("disabled");
      }

      if (!isNaN(max) && qtde === max) {
        btnAdd.addClass("disabled");
      } else {
        btnAdd.removeClass("disabled");
      }
    });
  }

  updateNumberPicker();
  $(".number-picker-sub").on("click", function (e) {
    e.preventDefault();
    var input = $($(this).data("target"));
    var min = Number(input.data("min"));
    var qtde = Number(input.val());

    if (isNaN(min) || qtde > min) {
      qtde--;
      input.val(qtde);
      input.trigger("change");
      updateNumberPicker();
    }
  });
  $(".number-picker-add").on("click", function (e) {
    e.preventDefault();
    var input = $($(this).data("target"));
    var max = Number(input.data("max"));
    var qtde = Number(input.val());

    if (isNaN(max) || qtde < max) {
      qtde++;
      input.val(qtde);
      input.trigger("change");
      updateNumberPicker();
    }
  });
})();
"use strict";

// ------------------------------------
// Dropdown
// ------------------------------------
(function () {
  "use strict"; // Variáveis

  var dropdownClass = ".dropdown";
  var $dropdowns = $(dropdownClass);
  var $dropdownToggle = $(".dropdown-toggle");
  var $dropdownMenu = $(".dropdown-menu"); // Abre ou fecha o dropdown ao clicar no botão

  $dropdownToggle.on("click", function (ev) {
    ev.preventDefault();
    var $dropdown = $(this).parent(dropdownClass);
    dropdownToggle($dropdown);
  }); // Fecha o dropdown ao clicar em outro local da tela

  $(document).on("click", function (ev) {
    if (ev.target !== $dropdowns && !$dropdowns.has(ev.target).length) {
      dropdownCloseAll();
    }
  });
  $dropdownMenu.on("click", function (ev) {
    ev.stopPropagation();
  }); // Abre ou fecha o dropdown

  function dropdownToggle($dropdown) {
    if ($dropdown.hasClass("open")) {
      dropdownClose($dropdown);
    } else {
      dropdownOpen($dropdown);
    }
  } // Abre o dropdown


  function dropdownOpen($dropdown) {
    dropdownCloseAll();
    $dropdown.addClass("open");
  } // Fecha o dropdown


  function dropdownClose($dropdown) {
    $dropdown.removeClass("open");
  } // Fecha todos os dropdown


  function dropdownCloseAll() {
    $dropdowns.removeClass("open");
  }
})();
"use strict";

// ------------------------------------
// Campos dinâmicos
// ------------------------------------
(function () {
  "use strict"; // Desativa o cache do Ajax

  $.ajaxSetup({
    cache: false
  }); // Campos dinâmicos

  $("[data-sync-input]").each(function () {
    // Variáveis
    // Campo dinâmico
    var $input = $(this); // Campo relativo

    var $relativeInput = $($input.data("sync-input")); // Parâmetro do campo relativo

    var parentParam = $input.data("sync-param"); // URL da ação

    var url = "".concat($input.data("sync-url"), "?").concat(parentParam, "="); // Valor cadastrado do campo dinâmico (Update)

    var inputValue = $input.data("sync-value"); // Parâmetro que ficará no atributo "value" de cada "<option>"

    var optionValue = $input.data("sync-option-value"); // Parâmetro que ficará dentro de cada "<option>"

    var optionText = $input.data("sync-option-text"); // Placeholder exibido no campo dinâmico, após o carregamento

    var inputPlaceholder = $input.data("sync-placeholder"); // Carrega o campo dinâmico ao carregar a página

    loadSyncInput(); // Evento de alteração do campo relativo

    $relativeInput.on("change", loadSyncInput); // Carrega o campo dinâmico

    function loadSyncInput() {
      processingSync(); // Realiza a requisição dos dados

      $.getJSON("".concat(url).concat($relativeInput.val()), function (result) {
        console.log(result);

        if (Array.isArray(result) && result.length > 0) {
          populateInput(result);
        } else {
          resetInput();
        } //input.trigger('change');

      }).fail(errorInput);
    } // Popula o campo dinâmico com os dados retornados


    function populateInput(list) {
      $input.html("");
      changePlaceholder(inputPlaceholder);
      inputValue = $input.data("sync-value");

      for (var i = 0, n = list.length; i < n; i++) {
        var selected = inputValue == list[i][optionValue] ? "selected" : "";
        $input.append("<option value=\"".concat(list[i][optionValue], "\" ").concat(selected, ">").concat(list[i][optionText], "</option>"));
      }

      $input.prop("disabled", false);

      if (inputValue != "") {
        $input.trigger("change");
        $input.parsley().validate();
      }
    } // Ações executadas enquanto a requisição é processada


    function processingSync() {
      $input.prop("disabled", true);
      $input.html("");
      changePlaceholder("Aguarde...");
    } // Reseta o campo dinâmico


    function resetInput() {
      $input.html("");
      changePlaceholder(inputPlaceholder);
      $input.prop("disabled", false);
    } // Erro na requisição


    function errorInput(resp) {
      console.log(resp);
      resetInput();
    } // Altera o placeholder do campo dinâmico


    function changePlaceholder(text) {
      // Select2
      if ($input.hasClass("select2")) {
        $input.append("<option></option>");
        setTimeout(function () {
          $("#select2-".concat($input.attr("id"), "-container .select2-selection__placeholder")).text(text);
        });
      } // Select Padrão
      else {
          $input.append("<option value=\"\" hidden>".concat(text, "</option>"));
        }
    }
  });
})();
"use strict";

// GOOGLE RECAPTCHA V2
var $recaptchaEls = $(".recaptcha-el"); // Inicializa o Recaptcha

var initRecaptcha = function initRecaptcha() {
  $recaptchaEls.each(function () {
    // Variáveis
    var $el = $(this);
    var $form = $("#" + $el.data("form"));
    var sitekey = $el.data("key");
    var recaptcha = grecaptcha.render($el.get(0), {
      sitekey: sitekey,
      callback: reCaptchaVerify,
      "expired-callback": reCaptchaExpired
    });
    var $inputResponse = $form.find(".g-recaptcha-response");
    $inputResponse.prop("required", true); // Verifica se a validação foi realizada antes de enviar o formulário

    function reCaptchaVerify(response) {
      if (response === $inputResponse.val()) {
        $inputResponse.prop("required", false);
      } else {
        $inputResponse.prop("required", true);
      }

      $form.parsley().validate();
    }
  });
}; // Função chamada ao expirar a validação


function reCaptchaExpired() {//location.reload();

  /* showAlert(
    "Atenção",
    "Validação expirada, verifique novamente que não é um robô.",
    "warning"
  ); */
}
"use strict";

// ------------------------------------
// Botões de Compartilhamento
// ------------------------------------
(function () {
  "use strict"; // Variáveis

  var url = location.href;
  var urlEncoded = encodeURIComponent(url);
  var pageTitle = document.title;
  var pageTitleEncoded = encodeURIComponent(pageTitle);
  var $btnFacebook = $(".share-button.facebook");
  var $btnTwitter = $(".share-button.twitter");
  var $btnWhatsApp = $(".share-button.whatsapp");
  var $btnLinkedIn = $(".share-button.linkedin");
  var $btnCopyLink = $(".share-button.copy-link"); // Cria o link de compartilhamento para o Facebook

  function makeShareLinkFacebook() {
    var shareLinkFacebook = "https://www.facebook.com/sharer/sharer.php?u=" + urlEncoded;
    $btnFacebook.attr("href", shareLinkFacebook);
  }

  makeShareLinkFacebook(); // Cria o link de compartilhamento para o Twiiter

  function makeShareLinkTwiiter() {
    var shareLinkTwiiter = "https://twitter.com/intent/tweet?url=" + urlEncoded + "&text=" + pageTitle;
    $btnTwitter.attr("href", shareLinkTwiiter);
  }

  makeShareLinkTwiiter(); // Cria o link de compartilhamento para o WhatsApp

  function makeShareLinkWhatsApp() {
    var shareLinkWhatsApp = "https://api.whatsapp.com/send?text=" + pageTitle + " " + urlEncoded;
    $btnWhatsApp.attr("href", shareLinkWhatsApp);
  }

  makeShareLinkWhatsApp(); // Cria o link de compartilhamento para o LinkedIn

  function makeShareLinkLinkedIn() {
    var shareLinkLinkedIn = "https://www.linkedin.com/shareArticle?mini=true&url=" + urlEncoded + "&title=" + pageTitleEncoded;
    $btnLinkedIn.attr("href", shareLinkLinkedIn);
  }

  makeShareLinkLinkedIn(); // Evento de click no botão para copiar o link da página

  $btnCopyLink.on("click", function (ev) {
    ev.preventDefault();
    copyToClipboard(url);
    showAlert("Link Copiado", "O link para esta página foi copiado com sucesso.", "success");
  });
})();
"use strict";

// ------------------------------------
// Tooltips
// ------------------------------------
var tippyInstance; // Configurações padrão

tippy.setDefaultProps({
  allowHTML: true,
  // Habilita as tags HTML no conteúdo
  maxWidth: 250,
  theme: "lp-dark"
}); // Inicializa a instância do Tippy.js

function initTippy() {
  tippyInstance = tippy("[data-tippy-content]");
}

initTippy();
"use strict";

/* =================== SLIDE HOME =================== */
jQuery(document).ready(function ($) {
  $(".slide-home").slick({
    infinite: true,
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
    dots: false,
    autoplay: true,
    autoplaySpeed: 5000,
    adaptiveHeight: true,
    fade: true,
    cssEase: "linear"
  });
});
"use strict";

/* =================== REGIÕES =================== */
jQuery(document).ready(function ($) {
  $(".carrosel-regioes").slick({
    slidesToShow: 3,
    slidesToScroll: 3,
    infinite: true,

    /* autoplay: true,
    autoplaySpeed: 3000, */
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        dots: true
      }
    }]
  });
});
"use strict";

/* =================== BLOCOS HOME =================== */
jQuery(document).ready(function ($) {
  $(".carrosel-blocos").slick({
    slidesToShow: 4,
    slidesToScroll: 1,
    infinite: true,

    /* autoplay: true,
    autoplaySpeed: 3000, */
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 3
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 1,
        arrows: false,
        dots: true,
        adaptiveHeight: true
      }
    }]
  });
});
"use strict";

/* =================== ENVIA CONTATO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-contato").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find("#enviar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Enviando...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-contato .campo").val("");
            showAlert("Sucesso", "Sua mensagem foi enviada com sucesso.", "success");
          } else {
            showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRA COMENTÁRIO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $('#form-comentario').on('submit', function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find('.btn');
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr('disabled', false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr('disabled', true);
          submit_btn.text('Aguarde...');
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            closeModal('modal-comentario');
            $('#form-comentario .campo').val('');
            showAlert('Sucesso', 'Seu comentário foi enviado com sucesso.', 'success');
          } else {
            showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRA NEWSLETTER =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $('#form-newsletter').on('submit', function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $('#enviar_news');
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr('disabled', false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr('action'),
        type: form.attr('method'),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr('disabled', true);
          submit_btn.text('Aguarde...');
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $('#form-newsletter .campo').val('');
            showAlert('Sucesso', 'Seu e-mail foi cadastrado com sucesso.', 'success');
          } else {
            showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert('Erro', 'Não foi possível realizar essa operação.', 'error');
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

// Filtros
(function () {
  "use strict"; // Variáveis

  var $btnToggle = $(".btn-toggle-filtros");
  var $btnClose = $(".filtros-close");
  var $filtrosWrp = $(".an-filtros-wrp");
  var $finalidadeCampo = $(".busca-finalidade");
  var $tipoCampo = $("#busca-tipo");
  var $filtrosResidencial = $(".filtros-residencial");
  var $filtrosComercial = $(".filtros-comercial"); // Evento de click no botão pra exibir/ocultar os filtros

  $btnToggle.on("click", function (ev) {
    ev.preventDefault();
    toggleFiltros();
  }); // Fecha os filtros ao clicar do botão de fechar

  $btnClose.on("click", function (ev) {
    ev.preventDefault();
    hideFiltros();
  }); // Fecha os filtros ao clicar fora

  $filtrosWrp.on("click", function (ev) {
    if (ev.target == this) {
      hideFiltros();
    }
  }); // Fecha os filtros ao pressionar a tecla ESC

  $(document).on("keyup", function (ev) {
    if (ev.keyCode == 27) {
      hideFiltros();
    }
  }); // Exibe os filtros

  function showFiltros() {
    $("body").css("overflow", "hidden");
    $filtrosWrp.addClass("active");
  } // Oculta os filtros


  function hideFiltros() {
    $("body").css("overflow", "auto");
    $filtrosWrp.removeClass("active");
  } // Exibe ou oculta os filtros


  function toggleFiltros() {
    if ($filtrosWrp.hasClass("active")) {
      hideFiltros();
    } else {
      showFiltros();
    }
  } // Ao alterar a finalidade


  $finalidadeCampo.on("change", handleFiltroValor);
  handleFiltroValor();

  function handleFiltroValor() {
    var finalidade = $(".busca-finalidade:checked").val();

    if (finalidade === "aluguel") {
      $(".busca-valor-venda-wrp").hide();
      $(".busca-valor-aluguel-wrp").show();
    } else {
      $(".busca-valor-venda-wrp").show();
      $(".busca-valor-aluguel-wrp").hide();
    }
  } // Ao alterar o tipo de imóvel


  $tipoCampo.on("change", handleFiltroTipo);
  handleFiltroTipo();

  function handleFiltroTipo() {
    var tipo = "residencial";

    if ($tipoCampo.val() && $tipoCampo.val() != "") {
      tipo = $tipoCampo.find("option:selected").parent().attr("label").toLowerCase();
    }

    if (tipo === "comercial") {
      $filtrosResidencial.find("input").prop("checked", false);
      $filtrosResidencial.hide();
      $filtrosComercial.show();
    } else {
      $filtrosComercial.find("input").prop("checked", false);
      $filtrosComercial.hide();
      $filtrosResidencial.show();
    }
  } // Envia filtros


  $("#ordena").on("change", function () {
    enviaFiltros();
  });
  $("#form-filtros").on("submit", function (ev) {
    ev.preventDefault();
    enviaFiltros();
  });

  function enviaFiltros() {
    var dados = $("#form-filtros, #form-ordem").serialize();
    window.location = url_base + "imoveis?" + dados;
  }
})(); // Anúncios conteúdo página


(function () {
  "use strict";

  if (!isMobileX(760)) {
    setHeightAnPag();
  }

  function setHeightAnPag() {
    var contentHeight = $(window).height() - ($(".header-full").outerHeight() + $(".anuncios-topo").outerHeight());
    $(".pag-anuncios-lista").css("height", contentHeight);
  }
})(); // Carrosel de anúncios


(function () {
  "use strict";

  if ($(".carrosel-anuncios").length > 0) {
    $(".carrosel-anuncios").slick({
      slidesToShow: 4,
      slidesToScroll: 4,
      infinite: true,
      autoplay: true,
      autoplaySpeed: 5000,
      responsive: [{
        breakpoint: 1199,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 760,
        settings: {
          arrows: false,
          dots: true,
          //autoplay: false,
          slidesToShow: 1,
          slidesToScroll: 1
        }
      }]
    });
  }
})(); // Carrosel de fotos do anúncio


(function () {
  "use strict";

  if ($(".bloco-anuncio-fotos").length > 0) {
    $(".bloco-anuncio-fotos > ul").each(function () {
      //const swipe = $(this).hasClass("swipe");
      //const arrows = !$(this).hasClass("noarrows");
      var swipe = true;
      $(this).slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        dots: true,
        swipe: swipe,
        infinite: true,
        responsive: [{
          breakpoint: 760,
          settings: {
            arrows: false
          }
        }]
      }).on("mousedown touchstart", function () {
        var $carroselPai = $(this).closest(".carrosel-anuncios");

        if ($carroselPai.length > 0) {
          $carroselPai[0].slick.setOption({
            swipe: false,
            autoplay: false
          });
          $carroselPai[0].slick.slickPause();
        }
      }).on("afterChange", function (event, slick) {
        var $carroselPai = $(this).closest(".carrosel-anuncios");

        if ($carroselPai.length > 0) {
          $carroselPai[0].slick.setOption({
            swipe: true,
            autoplay: true,
            autoplaySpeed: 5000
          });
          $carroselPai[0].slick.slickPlay();
        }
      });
    });
  }
})(); // Mapa


(function () {
  "use strict";

  var map;
  var bounds;
  var caixa;
  var markers = {};
  var locais = [];
  var iconeMc = url_base + "app/assets/dist/img/maps/marker.png";
  var iconeMcHover = url_base + "app/assets/dist/img/maps/marker_hover.png";
  var clusterImg = url_base + "app/assets/dist/img/maps/m"; // Obtém os imóveis e suas coordenadas

  function getLocais() {
    $(".bloco-anuncio").each(function () {
      // Remover depois (Gerando aleatóriamente)

      /* const randomGeoPoints = generateRandomPoints(
        { lat: -22.84, lng: -43.47 },
        15000,
        1
      );
      const newLat = Number(randomGeoPoints[0].lat);
      const newLng = Number(randomGeoPoints[0].lng); */
      if ($(this).data("lat") != "" && $(this).data("lng") != "") {
        var newLat = Number($(this).data("lat"));
        var newLng = Number($(this).data("lng"));
        locais.push({
          id: $(this).data("id"),
          url: $(this).data("url"),
          lat: newLat,
          lng: newLng,
          img: $(this).data("img"),
          titulo: $(this).data("titulo"),
          local: $(this).data("local"),
          preco: $(this).data("preco"),
          preco_add: $(this).data("preco-add")
        });
      }
    });
  } // Popula os locais no mapa


  function populaLocais() {
    getLocais();

    if (locais.length > 0) {
      bounds = new google.maps.LatLngBounds();
      locais.forEach(function (local) {
        var position = {
          lat: local.lat,
          lng: local.lng
        };
        bounds.extend(position);
        var marker = new google.maps.Marker({
          map: map,
          animation: google.maps.Animation.DROP,
          position: position,
          icon: {
            url: iconeMc,
            scaledSize: new google.maps.Size(35, 35)
          }
        });
        marker.addListener("click", function () {
          var precoAdd = local.preco_add ? "<div class=\"map-popup-preco-add\">".concat(local.preco_add, "</div>") : "";
          caixa.setContent("\n            <a href=\"".concat(local.url, "\" class=\"map-popup\">\n              <figure class=\"map-popup-img\">\n                <img src=\"").concat(local.img, "\" alt=\"").concat(local.titulo, "\">\n              </figure>\n              <div class=\"map-popup-infos\">\n                <div class=\"map-popup-titulo\">").concat(local.titulo, "</div>\n                <div class=\"map-popup-local\">").concat(local.local, "</div>\n                <div class=\"map-popup-preco\">").concat(local.preco, "</div>\n                ").concat(precoAdd, "\n              </div>\n            </a>"));
          caixa.open(map, marker);
        });
        markers[local.id] = marker;
      });

      if (locais.length > 1) {
        map.fitBounds(bounds);
      } else {
        map.setCenter(bounds.getCenter());
        map.setZoom(15);
      }

      var markerCluster = new MarkerClusterer(map, markers, {
        imagePath: clusterImg
      });
      $(".anuncio-bloco").on("mouseover", function () {
        markers[$(this).data("id")].setIcon({
          url: iconeMcHover,
          scaledSize: new google.maps.Size(35, 35)
        });
      }).on("mouseout", function () {
        markers[$(this).data("id")].setIcon({
          url: iconeMc,
          scaledSize: new google.maps.Size(35, 35)
        });
      });
    }
  } // Inicializa o mapa da tela


  function initMap() {
    var gestureHandling = isMobileX(760) ? "greedy" : "auto";
    map = new google.maps.Map(document.getElementById("mapa-anuncios"), {
      mapTypeControl: true,
      streetViewControl: false,
      gestureHandling: gestureHandling,
      styles: [{
        featureType: "landscape.natural",
        elementType: "geometry.fill",
        stylers: [{
          visibility: "on"
        }, {
          color: "#e0efef"
        }]
      }, {
        featureType: "poi",
        elementType: "geometry.fill",
        stylers: [{
          visibility: "on"
        }, {
          hue: "#1900ff"
        }, {
          color: "#c0e8e8"
        }]
      }, {
        featureType: "road",
        elementType: "geometry",
        stylers: [{
          lightness: 100
        }, {
          visibility: "simplified"
        }]
      }, {
        featureType: "road",
        elementType: "labels",
        stylers: [{
          visibility: "off"
        }]
      }, {
        featureType: "transit.line",
        elementType: "geometry",
        stylers: [{
          visibility: "on"
        }, {
          lightness: 700
        }]
      }, {
        featureType: "water",
        elementType: "all",
        stylers: [{
          color: "#7dcdcd"
        }]
      }]
    });
    caixa = new google.maps.InfoWindow();
    google.maps.event.addListener(map, "click", function () {
      caixa.close();
    });
    populaLocais();
  }

  $(window).load(function () {
    if ($("#mapa-anuncios").length > 0) {
      initMap();
    }
  });
  var $btnShowMap = $(".btn-fl-show-map");
  var $btnShowList = $(".btn-fl-show-list");
  var $btnShowFilter = $(".btn-fl-show-filter");
  var $mapaWrp = $(".anuncios-mapa");
  var $goTop = $(".gotop");
  var $body = $("body");
  $btnShowMap.on("click", function (ev) {
    ev.preventDefault();
    $btnShowMap.hide();
    $btnShowList.show();
    $btnShowFilter.show();
    $goTop.hide();
    $body.css("overflow", "hidden");
    $(".gm-fullscreen-control").hide();
    $mapaWrp.addClass("active");
  });
  $btnShowList.on("click", function (ev) {
    ev.preventDefault();
    $btnShowList.hide();
    $btnShowFilter.hide();
    $btnShowMap.show();
    $goTop.show();
    $body.css("overflow", "auto");
    $mapaWrp.removeClass("active");
  });
  /* $btnShowFilter.on("click", function (ev) {
    ev.preventDefault();
  }); */
})();
/**
 * Generates number of random geolocation points given a center and a radius.
 * @param  {Object} center A JS object with lat and lng attributes.
 * @param  {number} radius Radius in meters.
 * @param {number} count Number of points to generate.
 * @return {array} Array of Objects with lat and lng attributes.
 */


function generateRandomPoints(center, radius, count) {
  var points = [];

  for (var i = 0; i < count; i++) {
    points.push(generateRandomPoint(center, radius));
  }

  return points;
}
/**
 * Generates number of random geolocation points given a center and a radius.
 * Reference URL: http://goo.gl/KWcPE.
 * @param  {Object} center A JS object with lat and lng attributes.
 * @param  {number} radius Radius in meters.
 * @return {Object} The generated random points as JS object with lat and lng attributes.
 */


function generateRandomPoint(center, radius) {
  var x0 = center.lng;
  var y0 = center.lat; // Convert Radius from meters to degrees.

  var rd = radius / 111300;
  var u = Math.random();
  var v = Math.random();
  var w = rd * Math.sqrt(u);
  var t = 2 * Math.PI * v;
  var x = w * Math.cos(t);
  var y = w * Math.sin(t);
  var xp = x / Math.cos(y0); // Resulting point.

  return {
    lat: y + y0,
    lng: xp + x0
  };
} // Usage Example.
// Generates 100 points that is in a 1km radius from the given lat and lng point.

/* var randomGeoPoints = generateRandomPoints(
  { lat: -22.91, lng: -43.22 },
  20000,
  9
);
 */
"use strict";

// Fotos
(function () {
  "use strict"; // Slide

  $(".anuncio-det-slide").slick({
    infinite: true,
    slidesToShow: 3,
    slidesToScroll: 3,
    dots: false,
    autoplay: false,
    //autoplaySpeed: 5000,
    adaptiveHeight: true,
    responsive: [{
      breakpoint: 1199,
      settings: {
        arrows: false,
        slidesToShow: 2,
        slidesToScroll: 2
      }
    }, {
      breakpoint: 760,
      settings: {
        arrows: false,
        slidesToShow: 1,
        slidesToScroll: 1
      }
    }]
  });
  $(".anuncio-det-slide-wrp").css("height", "auto");
  $(".anuncio-det-slide").css("opacity", "1");
})(); // Lateral


(function () {
  "use strict";

  if (!isMobileX(1199) && $(".anuncio-lateral").length > 0) {
    var topSpacing = $(".header-full").outerHeight() + 20;
    var bottomSpacing = $(".anuncio-det-relacionados").length > 0 ? 1045 : 505;
    $(".anuncio-lateral").sticky({
      topSpacing: topSpacing,
      bottomSpacing: bottomSpacing
    });
  } // Exibe a âncora fixa (MOBILE)


  if (isMobileX(1199) && $("#reserva-mobile-sec").length > 0) {
    $(window).on("scroll", debounce(function () {
      var offset = $("#reserva-mobile-sec").offset().top + $("#reserva-mobile-sec").outerHeight() - $(".header-full").outerHeight();

      if ($(window).scrollTop() > offset) {
        $(".anuncio-det-anchor").addClass("active");
      } else {
        $(".anuncio-det-anchor").removeClass("active");
      }
    }, 50));
  } // Botão compartilhar (Mobile)


  $(".btn-mbl-share").on("click", function (ev) {
    ev.preventDefault();
    var $btn = $(this);
    var title = $btn.data("title");
    var text = $btn.data("text");
    var url = $btn.data("url");

    if (navigator.share) {
      navigator.share({
        title: title,
        text: text,
        url: url
      }).then(function () {
        console.log("Obrigado por compartilhar!");
      })["catch"](function (error) {
        return console.log("Error sharing", error);
      });
    }
  });
})(); // Localização


(function () {
  "use strict";

  function initMap() {
    var elementMap = $("#anuncio-det-mapa");
    var elementStreet = $("#anuncio-det-street");
    var icon = elementMap.data("icon");
    var lat = elementMap.data("lat");
    var lng = elementMap.data("lng");
    var location = new google.maps.LatLng(lat, lng);
    var $btnViewMap = $(".view-map");
    var $btnViewStreet = $(".view-street");
    var $btnScrollMap = $(".scroll-map");
    var $btnScrollStreet = $(".scroll-street");
    var panorama;
    var gestureHandling = isMobileX(760) ? "greedy" : "auto";
    var mapOptions = {
      zoom: 14,
      center: location,
      streetViewControl: false,
      gestureHandling: gestureHandling
    };
    var map = new google.maps.Map(elementMap.get(0), mapOptions);
    var marker = new google.maps.Marker({
      position: location,
      icon: icon,
      map: map
    });
    panorama = map.getStreetView();
    panorama.setPosition(location);
    /* panorama.setPov({
      heading: 265,
      pitch: 0,
    }); */

    $btnViewMap.on("click", viewMap);
    $btnScrollMap.on("click", function (ev) {
      ev.preventDefault();
      scrollToX("#imovel-localizacao");
      viewMap();
    });

    function viewMap() {
      $btnViewStreet.removeClass("btn-primario");
      $btnViewMap.addClass("btn-primario");

      if (panorama.getVisible()) {
        panorama.setVisible(false);
      }
    }

    $btnViewStreet.on("click", viewStreet);
    $btnScrollStreet.on("click", function (ev) {
      ev.preventDefault();
      scrollToX("#imovel-localizacao");
      viewStreet();
    });

    function viewStreet() {
      $btnViewMap.removeClass("btn-primario");
      $btnViewStreet.addClass("btn-primario");

      if (!panorama.getVisible()) {
        panorama.setVisible(true);
      }
    }
  }

  $(window).load(function () {
    if ($("#anuncio-det-mapa").length > 0) {
      initMap();
    }
  });
})(); // Envia avaliação


var enviando_formulario = false;
$("#form-avaliacao").on("submit", function (e) {
  e.preventDefault();
  var obj = this;
  var form = $(obj);
  var submit_btn = form.find("#enviar_avaliacao");
  var submit_btn_text = submit_btn.text();
  var dados = new FormData(obj);

  function volta_submit() {
    submit_btn.attr("disabled", false);
    submit_btn.text(submit_btn_text);
    enviando_formulario = false;
    hideLoading();
  }

  if (!enviando_formulario) {
    $.ajax({
      url: form.attr("action"),
      type: form.attr("method"),
      data: dados,
      processData: false,
      cache: false,
      contentType: false,
      beforeSend: function beforeSend() {
        showLoading();
        enviando_formulario = true;
        submit_btn.attr("disabled", true);
        submit_btn.text("Enviando...");
      },
      success: function success(data) {
        //console.log(data);
        volta_submit();

        if (data == "ok") {
          closeModal("modal-avaliacao");
          $("#form-avaliacao .campo").val("");
          showAlert("Sucesso", "Obrigado! Sua avaliação foi enviada com sucesso.", "success");
        } else {
          showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
        }
      },
      error: function error(xhr, type, exception) {
        volta_submit();
        showAlert("Erro", "Não foi possível enviar a mensagem.", "error");
        console.log("ajax error response type " + type);
      }
    });
  }
});
"use strict";

(function () {
  "use strict";

  $(".radio-box-item input").parsley({
    classHandler: function classHandler(el) {
      return el.$element.closest(".campo-container");
    },
    errorsContainer: function errorsContainer(el) {
      return el.$element.closest(".campo-container");
    }
  });
  $(".show-modal-agendamento-cliente").on("click", function (ev) {
    ev.preventDefault();
    showModalAgCliente($(this));
  });
  $(".show-modal-agendamento-corretor").on("click", function (ev) {
    ev.preventDefault();
    showModalAgCorretor($(this));
  });

  function showModalAgCliente($btn) {
    $('label[for="ag-nome"]').text("Nome completo");
    $("#ag-nome").attr("placeholder", "Digite seu nome completo").val($btn.data("nome"));
    $('label[for="ag-email"]').text("E-mail");
    $("#ag-email").attr("placeholder", "Digite seu e-mail").val($btn.data("email"));
    $('label[for="ag-telefone"]').text("Telefone");
    $("#ag-telefone").attr("placeholder", "Digite seu telefone").val($btn.data("telefone"));
    $("#ag-cliente").val($btn.data("cliente"));
    $("#form-agendamento").parsley().reset();
    openModal("modal-det-agendamento");
  }

  function showModalAgCorretor($btn) {
    $('label[for="ag-nome"]').text("Nome completo do cliente");
    $("#ag-nome").attr("placeholder", "Digite o nome completo do cliente").val("");
    $('label[for="ag-email"]').text("E-mail do cliente");
    $("#ag-email").attr("placeholder", "Digite o e-mail do cliente").val("");
    $('label[for="ag-telefone"]').text("Telefone do cliente");
    $("#ag-telefone").attr("placeholder", "Digite o telefone do cliente").val("");
    $("#ag-corretor").val($btn.data("corretor"));
    $("#form-agendamento").parsley().reset();
    openModal("modal-det-agendamento");
  } // Ao selecionar um dia


  $(".radio-box-days input").on("change", handleAlteraDia);

  if ($(".radio-box-days input").length > 0) {
    handleAlteraDia();
  }

  function handleAlteraDia() {
    var $dia = $(".radio-box-days input:checked");
    var dia = $dia.val();
    var horarios = $dia.data("horarios").split(",");
    carregaHorarios(horarios);
  } // Carrossel datas


  $(".radio-box-days").slick({
    infinite: false,
    slidesToShow: 5,
    slidesToScroll: 3,
    autoplay: false,
    responsive: [{
      breakpoint: 1199,
      settings: {
        slidesToShow: 6
      }
    }, {
      breakpoint: 760,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 2
      }
    }]
  }); // Carrossel horários

  function carregaHorarios(horarios) {
    if ($(".radio-box-time").hasClass("slick-slider")) {
      $(".radio-box-time").slick("unslick");
    }

    $(".radio-box-time").html("");

    if (horarios.length > 0) {
      horarios.forEach(function (item) {
        $(".radio-box-time").append("\n        <li class=\"radio-box-item\">\n          <input type=\"radio\" name=\"horario\" id=\"ag-horario-".concat(item, "\" value=\"").concat(item, "\" required data-parsley-required-message=\"Selecione um hor\xE1rio\">\n          <label for=\"ag-horario-").concat(item, "\" class=\"radio-box-wrp\">\n            <div class=\"radio-box-text\">").concat(item, "</div>\n          </label>\n        </li>"));
      });
      $(".radio-box-time input").each(function () {
        $(this).parsley({
          classHandler: function classHandler(el) {
            return el.$element.closest(".campo-container");
          },
          errorsContainer: function errorsContainer(el) {
            return el.$element.closest(".campo-container");
          }
        }).reset();
      });
      $(".radio-box-time").slick({
        infinite: false,
        slidesToShow: 6,
        slidesToScroll: 3,
        autoplay: false,
        responsive: [{
          breakpoint: 1199,
          settings: {
            slidesToShow: 6
          }
        }, {
          breakpoint: 760,
          settings: {
            slidesToShow: 3
          }
        }]
      });
    }
  } // ENVIA O FORMULÁRIO


  var enviando_formulario = false;
  $("#form-agendamento").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find(".btn-agendar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            closeModal("modal-det-agendamento");
            showAlert("Sucesso", "Visita agendada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 3000);
          } else {
            showAlert("Erro", "Não foi possível realizar esta operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar esta operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
})();
"use strict";

/* =================== LOGIN =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-login").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#cd-login");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false; //hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-login .campo").val("");
            window.location.href = $("#login_retorno").val();
          } else {
            showAlert("Dados Inválidos", "Os dados de acesso estão inválidos. Verifique se o e-mail ou senha estão corretos.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-cadastro").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#cd-cadastrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false; //hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            window.location.href = $("#cadastro_retorno").val();
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== MINHA CONTA =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-recuperacao").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#enviar_rec");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            closeModal("modal-recuperacao");
            showAlert("Sucesso", "Uma mensagem foi enviada para o seu e-mail com instruções para você cadastrar uma nova senha.", "success");
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

/* =================== CADASTRA SENHA =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-senha").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#rec-cadastrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#form-senha .campo").val("");
            showAlert("Sucesso", "Sua nova senha foi cadastrada com sucesso.", "success");
            setTimeout(function () {
              window.location.href = $("#retorno_success").val();
            }, 3000);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

// LOGIN FACEBOOK
(function () {
  var appId = "123"; // Carrega o SDK

  (function (d, s, id) {
    var js,
        fjs = d.getElementsByTagName(s)[0];

    if (d.getElementById(id)) {
      return;
    }

    js = d.createElement(s);
    js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  })(document, "script", "facebook-jssdk"); // Inicializa a API


  window.fbAsyncInit = function () {
    FB.init({
      appId: appId,
      cookie: true,
      xfbml: true,
      version: "v3.1"
    });
    /* FB.getLoginStatus(function(response) {
      console.log(response);
    }); */
  }; // Login


  $("#facebook-login").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.tipo = $("#login-tipo").val(); //response.picture = 'https://graph.facebook.com/'+dados.id+'/picture';
          // Tentativa de login

          $.ajax({
            url: $("#facebook_id_login").data("url"),
            type: "POST",
            data: dados,
            success: function success(data) {
              // Se encontrar o usuário, realiza o login
              if (data == "ok") {
                window.location.href = $("#login_retorno").val();
              } // Se não, abre o modal solicitando para que o usuário realize o login ou efetue um novo cadastro
              else if (data == "erro") {
                  $("#facebook_id_login").val(dados.id);
                  showAlert("Atenção", "<p><b>Usu\xE1rio n\xE3o encontrado</b></p>\n                     <p>Caso j\xE1 possua uma conta, efetue o login atrav\xE9s do e-mail e senha.</p>\n                     <p>Ainda n\xE3o se cadastrou? <b><a href=\"#\" class=\"link open-cadastro\">Cadastre-se</a></b></p>", "warning");
                } else {
                  showAlert("Erro", "Não foi possível realizar essa operação.", "error");
                }
            },
            error: function error(request, status, _error) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Cadastro com o facebook

  $("#facebook-cad").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.facebook_id = dados.id;
          dados.tipo = $("#cadastro-tipo").val();
          /* response.picture = 'https://graph.facebook.com/'+dados.id+'/picture'; */
          // Verifica se já existe algum usuário já cadastrado com o e-mail ou facebook_id

          $.ajax({
            url: $("#facebook_id_cad").data("url"),
            type: "POST",
            data: dados,
            success: function success(data) {
              if (data == "ok") {
                // Popula o formulário de cadastro
                $("#form-cadastro #facebook_id_cad").val(dados.id);
                $("#form-cadastro #nome").val(dados.name);
                $("#form-cadastro #email").val(dados.email);
              } else if (data == "erro") {
                showAlert("Atenção", '<p>Já existe um usuário vinculado a esta conta do Facebook. Por favor, efetue o <b><a href="#" class="link open-login">Login</a></b>.</p>', "warning");
              } else {
                showAlert("Erro", "Não foi possível realizar essa operação.", "error");
              }
            },
            error: function error(request, status, _error2) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Vincula com o facebook

  $("#facebook-vinc").on("click", function (e) {
    e.preventDefault(); // Abre o popup para o usuário logar com o facebook

    FB.login(function (response) {
      // Verifica se o login foi realizado com sucesso
      if (response.status === "connected") {
        // Retorna os dados do usuário
        FB.api("/me", {
          fields: "name, email"
        }, function (response) {
          var dados = response;
          dados.acao = "vincular";
          $.ajax({
            url: url_base + "acoes/app/corretor/vincular_facebook.php",
            type: "POST",
            data: dados,
            success: function success(data) {
              if (data == "ok") {
                showAlert("Sucesso", "O Facebook foi vinculado a sua conta com sucesso.", "success");
                setTimeout(function () {
                  window.location.reload();
                }, 2000);
              } else {
                showAlert("Atenção", "<p>Já existe um usuário vinculado a esta conta do Facebook.</p>", "warning");
              }
            },
            error: function error(request, status, _error3) {
              console.log(request.responseText);
            }
          });
        });
      }
    }, // Permissões
    {
      scope: "public_profile, email"
    });
  }); // Desvincular com o facebook

  $("#facebook-des").on("click", function (e) {
    e.preventDefault();
    var dados = {
      acao: "desvincular"
    };
    $.ajax({
      url: url_base + "acoes/app/corretor/vincular_facebook.php",
      type: "POST",
      data: dados,
      success: function success(data) {
        if (data == "ok") {
          showAlert("Sucesso", "O Facebook foi desvinculado da sua conta com sucesso.", "success");
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        }
      },
      error: function error(request, status, _error4) {
        console.log(request.responseText);
      }
    });
  });
})();
"use strict";

/* =================== MINHA CONTA =================== */
jQuery(document).ready(function ($) {
  // Abre o modal de recuperaçao de senha
  $(".link-rec").on("click", function (e) {
    e.preventDefault();
    closeModal("modal-login");
    openModal("modal-recuperacao");
  }); // Abre o modal de cadastro

  $(".open-cadastro").on("click", function (e) {
    e.preventDefault();
    var tipo = $(this).data("tipo");

    if (tipo) {
      $("#login-tipo").val(tipo);
      $("#cadastro-tipo").val(tipo);
    }

    closeModal("modal-login");
    openModal("modal-cadastro");
  }); // Abre o modal de login

  $(".open-login").on("click", function (e) {
    e.preventDefault();
    var tipo = $(this).data("tipo");

    if (tipo) {
      $("#login-tipo").val(tipo);
      $("#cadastro-tipo").val(tipo);
    }

    closeModal("modal-cadastro");
    openModal("modal-login");
  }); // Exibe a confirmação ao clicar no botão de remover

  $(".btn-confirm").on("click", function (e) {
    e.preventDefault();
    var idRemove = $(this).data("id");
    $("#id_remove").val(idRemove);
    openModal("modal-confirm");
  }); // Exibe a confirmação ao clicar no botão de duplicar

  $(".btn-duplicar").on("click", function (e) {
    e.preventDefault();
    var idAnuncio = $(this).data("id");
    $("#id_duplica").val(idAnuncio);
    openModal("modal-confirm2");
  }); // Exibe a confirmação ao clicar no botão de cancelar plano

  $(".btn-cancela").on("click", function (e) {
    e.preventDefault();
    var idCancela = $(this).data("id");
    $("#id_cancela").val(idCancela);
    openModal("modal-cancelar");
  }); // TIPO DE CONTA DO LOCATARIO

  function validaTipoConta() {
    var tipo = $('input[name="tipo_cadastro"]:checked').val();

    if (tipo == "fisica") {
      $(".campo-cnpj").hide();
      $(".campo-cnpj input").prop("required", false);
      $(".campo-razao").hide();
      $(".campo-razao input").prop("required", false);
    } else if (tipo == "juridica") {
      $(".campo-cnpj").show();
      $(".campo-cnpj input").prop("required", true);
      $(".campo-razao").show();
      $(".campo-razao input").prop("required", true);
    }
  }

  validaTipoConta();
  $('input[name="tipo_cadastro"]').on("change", function () {
    validaTipoConta();
  }); // Exibe/Oculta os campos da forma de pagamento escolhida

  $('input[name="forma-pagamento"]').on("change", function () {
    $(".forma-pag-content").slideUp();
    $(".forma-pag-content .campo").prop("disabled", true);
    $(".forma-pag-content .campo").prop("required", false);
    $('.forma-pag-content[data-forma="' + $(this).val() + '"]').slideDown();
    $('.forma-pag-content[data-forma="' + $(this).val() + '"] .campo').prop("disabled", false);
    $('.forma-pag-content[data-forma="' + $(this).val() + '"] .campo').prop("required", true);
  }); // TERMOS (LOCATARIOS E PROPRIETARIOS)

  $(".botao-gera-contrato").show();
  $(".escolha-contrato-proprietario").on("change", function () {
    if ($(this).find("option:selected").data("termo") != 1) {
      openModal("modal-termo-" + $(this).val());
      $(".botao-gera-contrato").hide();
    } else {
      $(".botao-gera-contrato").show();
    }
  });
  $(".refresh-button-contrato").on("click", function () {
    $(".botao-gera-contrato").show();
  });
  $(".refresh-pag").on("click", function () {
    location.reload();
  });
  $(".check-termos").on("click", function () {
    var url_contrato = $(this).data("reload");
    $.ajax({
      url: $(this).data("url"),
      beforeSend: function beforeSend() {
        showLoading();
      },
      success: function success(data) {
        console.log(data);

        if (data == "ok") {
          location.href = url_contrato;
        } else {
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        }
      },
      error: function error(xhr, type, exception) {
        volta_submit();
        showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        console.log("ajax error response type " + type);
      }
    });
  });
}); // Menu lateral

(function () {
  "use strict";

  handleItemActive();

  function handleItemActive() {
    $(".conta-lateral-menu li.active").prev().addClass("top");
    $(".conta-lateral-menu li.active").next().addClass("bottom");
  }
})(); // Modal link restrito


$(".btn-modal-restrito").on("click", function (ev) {
  ev.preventDefault();
  var $btn = $(this);
  var $modal = $("#modal-user-restrito");

  if ($modal.find(".btn-cliente").data("logado") > 0) {
    $modal.find(".btn-cliente").attr("href", $btn.data("cliente"));
  } else {
    $modal.find(".btn-cliente").attr("href", url_base + "cliente/entrar?retorno=" + $btn.data("cliente"));
  }

  if ($modal.find(".btn-proprietario").data("logado") > 0) {
    $modal.find(".btn-proprietario").attr("href", $btn.data("proprietario"));
  } else {
    $modal.find(".btn-proprietario").attr("href", url_base + "proprietario/entrar?retorno=" + $btn.data("proprietario"));
  }

  if ($modal.find(".btn-corretor").data("logado") > 0) {
    $modal.find(".btn-corretor").attr("href", $btn.data("corretor"));
  } else {
    $modal.find(".btn-corretor").attr("href", url_base + "corretor/entrar?retorno=" + $btn.data("corretor"));
  }

  if ($modal.find(".btn-afiliado").data("logado") > 0) {
    $modal.find(".btn-afiliado").attr("href", $btn.data("afiliado"));
  } else {
    $modal.find(".btn-afiliado").attr("href", url_base + "afiliado/entrar?retorno=" + $btn.data("afiliado"));
  }

  openModal("modal-user-restrito");
}); // Link restrito

$(".link-restrito").on("click", function (ev) {
  ev.preventDefault();
  var $link = $(this);
  var linkArea = $link.data("area");
  var linkUrl = $link.attr("href");
  var logado = $link.data("logado");

  if (logado > 0) {
    location.href = linkUrl;
  } else {
    location.href = url_base + linkArea + "/entrar?retorno=" + linkUrl;
  }
}); // Regiões de atuação

$('input[name="atuacao"]').on("change", handleRegioesAtuacao);

if ($('input[name="atuacao"]').length > 0) {
  handleRegioesAtuacao();
}

function handleRegioesAtuacao() {
  if ($('input[name="atuacao"][value="avulso"]').is(":checked") || $('input[name="atuacao"][value="locacao"]').is(":checked")) {
    $(".regioes1").show();
    $(".regioes1").find("input").prop("disabled", false).prop("required", true);
  } else {
    $(".regioes1").hide();
    $(".regioes1").find("input").prop("disabled", true).prop("required", false);
  }

  if ($('input[name="atuacao"][value="planta"]').is(":checked")) {
    $(".regioes2").show();
    $(".regioes2").find("input").prop("disabled", false).prop("required", true);
  } else {
    $(".regioes2").hide();
    $(".regioes2").find("input").prop("disabled", true).prop("required", false);
  }
}
"use strict";

/* =================== ATUALIZAR DADOS =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-update-dados").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#atualizar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            showAlert("Sucesso", "Seus dados foram atualizados com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 1500);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
});
"use strict";

(function () {
  "use strict";

  var map;
  var geocoder;
  var marker; // Retorna o endereço completo formatado

  function getAddress() {
    // Verifica se as informações foram preenchidas
    if ($("#logradouro").val() != "" && $("#bairro").val() != "" && $("#cidade_nome").val() != "" && $("#estado_nome").val() != "") {
      var logradouro = $("#logradouro").val();
      var numero = $("#numero").val();
      var bairro = $("#bairro").val();
      var cidade = $("#cidade_nome").val();
      var estado = $("#estado_nome").val();
      var pais = "Brasil";
      var endereco = logradouro + ", " + numero + ", " + bairro + ", " + cidade + ", " + estado + ", " + pais;
      endereco = clearAddress(endereco);
      return endereco;
    }

    return false;
  } // Limpa o endereço


  function clearAddress(string) {
    return string.replace(/\s/g, "+");
  } // Obtém a posição no mapa do endereço passado


  function getGeocodeFromAddress(address) {
    geocoder.geocode({
      address: address
    }, function (results, status) {
      if (status === "OK") {
        var position = results[0].geometry.location;
        setCoordinates(formatPosition(position));
        setMapLocale(position);
      } else {
        showAlert("Atenção", "Não foi possível encontrar o endereço informado.", "warning");
      }
    });
  } // Cria um marcador no local informado no mapa


  function setMapLocale(position) {
    map.setCenter(position);

    if (marker !== undefined) {
      marker.setMap(null);
    }

    marker = new google.maps.Marker({
      map: map,
      draggable: true,
      animation: google.maps.Animation.DROP,
      position: position,
      icon: {
        url: url_base + "app/assets/dist/img/maps/marker.png",
        scaledSize: new google.maps.Size(45, 45)
      }
    });
    marker.addListener("dragend", handleMarker);
    map.setZoom(16);
  } // Formata as coordenadas para String


  function formatPosition(position) {
    return {
      lat: position.lat().toFixed(6),
      lng: position.lng().toFixed(6)
    };
  } // Obtém as novas coordenadas ao mover o marcador


  function handleMarker() {
    var position = marker.getPosition();
    setCoordinates(formatPosition(position));
  } // Passa as coordenadas para o campo


  function setCoordinates(coordinates) {
    $("#lat").val(coordinates.lat).parsley().validate();
    $("#lng").val(coordinates.lng).parsley().validate();
  } // Obtem as coordenadas do campo


  function getCoordinates() {
    var coordinates = $("#lat").val() + ", " + $("#lng").val();
    return {
      lat: Number($("#lat").val()),
      lng: Number($("#lng").val())
    };
  } // Evento de click no botão para encontrar o local no mapa


  $(".btn-mapa").on("click", function (e) {
    e.preventDefault();

    if (getAddress()) {
      var address = getAddress();
      getGeocodeFromAddress(address);
    } else {
      showAlert("Atenção", "Não foi possível encontrar o local no mapa. Por favor, informe o endereço corretamente.", "warning");
    }
  }); // Inicializa o mapa (Formulário)

  function initMapForm() {
    map = new google.maps.Map(document.getElementById("form-mapa-anuncio"), {
      zoom: 3,
      center: {
        lat: -15.90812,
        lng: -47.983592
      },
      // <- Brasília
      streetViewControl: false
    });
    geocoder = new google.maps.Geocoder(); // Carrega a posição no mapa ao editar

    if ($("#form-mapa-anuncio").length > 0 && $("#lat").val() != "" && $("#lng").val() != "") {
      var position = getCoordinates();
      setMapLocale(position);
    }
  } // MAPA


  $(window).load(function () {
    if ($("#form-mapa-anuncio").length > 0) {
      initMapForm();
    }
  });
  var enviando_formulario = false; // CADASTRAR / EDITAR

  $("#form-anuncio").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find("#cadastrar");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(response) {
          console.log(response);
          response = JSON.parse(response);

          if (response.status == "ok") {
            window.location.href = response.url;
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // REMOVE ANÚNCIO

  $("#form-remove-anuncio").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_remove").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_remove").val("");
            showAlert("Sucesso", "Anúncio removido com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // DUPLICA ANÚNCIO

  $("#form-duplica-anuncio").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_duplica").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm2");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_duplica").val("");
            showAlert("Sucesso", "Anúncio duplicado com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // FINALIDADE

  var $campoFinalidade = $(".campo-finalidade");
  var $camposVendaWrp = $(".campo-venda");
  var $camposVenda = $camposVendaWrp.find("input, select, textarea");
  var $camposVendaReq = $camposVendaWrp.find("input[data-required], select[data-required], textarea[data-required]");
  var $camposAluguelWrp = $(".campo-aluguel");
  var $camposAluguel = $camposAluguelWrp.find("input, select, textarea");
  var $camposAluguelReq = $camposAluguelWrp.find("input[data-required], select[data-required], textarea[data-required]"); // Ao alterar a finalidade

  $campoFinalidade.on("change", handleFinalidade);
  handleFinalidade();

  function handleFinalidade() {
    var finalidade = $campoFinalidade.val();
    var tituloPlaceholder;

    if (finalidade === "aluguel") {
      tituloPlaceholder = "Apartamento para alugar com 80 m², 2 quartos e 1 vaga";
      $camposVendaWrp.hide();
      $camposVenda.prop("disabled", true);
      $camposVenda.prop("required", false);
      $camposAluguelWrp.show();
      $camposAluguel.prop("disabled", false);
      $camposAluguelReq.prop("required", true);
    } else if (finalidade === "venda") {
      tituloPlaceholder = "Apartamento à venda com 80 m², 2 quartos e 1 vaga";
      $camposAluguelWrp.hide();
      $camposAluguel.prop("disabled", true);
      $camposAluguelReq.prop("required", false);
      $camposVendaWrp.show();
      $camposVenda.prop("disabled", false);
      $camposVendaReq.prop("required", true);
    } else if (finalidade === "venda-aluguel") {
      tituloPlaceholder = "Apartamento para venda ou aluguel com 80 m², 2 quartos e 1 vaga";
      $camposVendaWrp.show();
      $camposVenda.prop("disabled", false);
      $camposVendaReq.prop("required", true);
      $camposAluguelWrp.show();
      $camposAluguel.prop("disabled", false);
      $camposAluguelReq.prop("required", true);
    }

    $("#titulo").attr("placeholder", tituloPlaceholder);
  } // TIPO


  var $campoTipo = $("#tipo_id");
  var $camposResWrp = $(".campos-residencial");
  var $camposRes = $camposResWrp.find("input, select, textarea");
  var $camposResReq = $camposResWrp.find("input[data-required], select[data-required], textarea[data-required]");
  var $camposComWrp = $(".campos-comercial");
  var $camposCom = $camposComWrp.find("input, select, textarea");
  var $camposComReq = $camposComWrp.find("input[data-required], select[data-required], textarea[data-required]"); // Ao alterar o tipo

  $campoTipo.on("change", handleTipo);
  handleTipo();

  function handleTipo() {
    var tipo = "Residencial";

    if ($campoTipo.val() && $campoTipo.val() != "") {
      tipo = $campoTipo.find("option:selected").parent().attr("label");
    }

    $("#tipo_nome").val(tipo);
    tipo = tipo.toLowerCase();

    if (tipo === "comercial") {
      $camposResWrp.hide();
      $camposRes.prop("disabled", true);
      $camposRes.prop("required", false);
      $camposComWrp.show();
      $camposCom.prop("disabled", false);
      $camposComReq.prop("required", true);
    } else {
      $camposComWrp.hide();
      $camposCom.prop("disabled", true);
      $camposComReq.prop("required", false);
      $camposResWrp.show();
      $camposRes.prop("disabled", false);
      $camposResReq.prop("required", true);
    }
  }
})(); // Vídeo


(function () {
  "use strict"; // Variáveis

  var $videoURL = $("#video_url");
  var $videoID = $("#video_id");
  var $videoPlataforma = $("#video_plataforma");
  var $videoIframe = $(".an-video-iframe");

  if ($videoURL.length > 0) {
    handleVideo();
    $videoURL.on("change", handleVideo);
  } // Evento ao alterar a url do vídeo


  function handleVideo() {
    var videoURL = $videoURL.val().trim();
    $videoURL.val("");
    $videoID.val("");
    $videoIframe.html("");
    $videoIframe.hide();

    if (videoURL != "") {
      var videoObj = parseVideo(videoURL);

      if (videoObj.id) {
        $videoURL.val(videoURL);
        $videoID.val(videoObj.id);
        $videoPlataforma.val(videoObj.plataforma);
        $videoIframe.append(createVideo(videoURL));
        $videoIframe.show();
      } else {
        showAlert("Atenção", "Não foi possível carregar o vídeo. Verifique se o link informado está correto ou se o vídeo possui permissão para ser incorporado em outros sites.", "warning");
      }
    }
  } // Obtém o ID de um vídeo do Youtube através da URL


  function YouTubeGetID(url) {
    url = url.split(/(vi\/|v%3D|v=|\/v\/|youtu\.be\/|\/embed\/)/);
    return undefined !== url[2] ? url[2].split(/[^0-9a-z_\-]/i)[0] : url[0];
  } // Obtém o ID de um vídeo do Vimeo através da URL


  function VimeoGetID(url) {
    var id = false;
    $.ajax({
      url: "https://vimeo.com/api/oembed.json?url=" + url,
      async: false,
      success: function success(response) {
        if (response.video_id) {
          id = response.video_id;
        }
      }
    });
    return id;
  } // Retorna um objeto com as informações do vídeo


  function parseVideo(url) {
    var videoObj = {}; // Verifica a plataforma do vídeo

    if (/youtu/.test(url)) {
      videoObj.plataforma = "youtube";
      videoObj.id = YouTubeGetID(url);
    } else if (/vimeo/.test(url)) {
      videoObj.plataforma = "vimeo";
      videoObj.id = VimeoGetID(url);
    }

    return videoObj;
  } // Cria um elemento Iframe de vídeo


  function createVideo(url) {
    var videoObj = parseVideo(url);
    var $iframe;

    if (videoObj.plataforma == "youtube") {
      $iframe = "<div class=\"bloco-video-wrapper\"><iframe src=\"https://www.youtube.com/embed/".concat(videoObj.id, "?controls=0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>");
    } else if (videoObj.plataforma == "vimeo") {
      $iframe = "<div class=\"bloco-video-wrapper\"><iframe src=\"https://player.vimeo.com/video/".concat(videoObj.id, "?title=0&byline=0&portrait=0\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></div>");
    }

    return $iframe;
  }
})(); // Disponibilidade visitas


(function () {
  "use strict";

  $('.dia-disponibilidade input[type="checkbox"]').on("change", dayDispHandler);
  dayDispHandler();

  function dayDispHandler() {
    $('.dia-disponibilidade input[type="checkbox"]').each(function () {
      var $input = $(this);
      var $container = $input.parent().parent().parent().parent();
      var $inputs = $container.find('input[type="text"]');

      if ($(this).is(":checked")) {
        $container.addClass("active");
        $inputs.prop("disabled", false);
        $inputs.prop("required", true);
      } else {
        $container.removeClass("active");
        $inputs.prop("disabled", true);
        $inputs.prop("required", false);
      }

      $inputs.each(function () {
        $(this).parsley().reset();
      });
    });
  }
})(); // Verifica se já existe outro imóvel com o mesmo endereço


(function () {
  "use strict";

  $(".ver_end_dup").on("change", verificaEndereco);

  function verificaEndereco() {
    var finalidade = $("#finalidade").val();
    var logradouro = $("#logradouro").val();
    var numero = $("#numero").val();
    var complemento = $("#complemento").val() ? $("#complemento").val() : "";
    var bairroId = $("#bairro_id").val();
    var cidadeId = $("#cidade_id").val();
    var estadoId = $("#estado_id").val();

    if (finalidade != "" && logradouro != "" && bairroId != "" && cidadeId != "" && estadoId != "" && numero != "") {
      var data = {
        finalidade: finalidade,
        logradouro: logradouro,
        numero: numero,
        complemento: complemento,
        bairro_id: bairroId,
        cidade_id: cidadeId,
        estado_id: estadoId
      };

      if ($('#form-anuncio input[name="acao"]').val() == "update") {
        data.id_update = $('#form-anuncio input[name="id"]').val();
      } //console.log(data);


      $.getJSON(url_base + "acoes/app/proprietario/verifica_endereco.php", data, function (result) {
        console.log(result);

        if (result.total > 0) {
          $("#numero").val("");
          showAlert("Atenção", "Já existe um outro imóvel cadastrado com este mesmo endereço e finalidade.", "warning");
        }
      });
    }
  }
})();
"use strict";

/* =================== CADASTRO =================== */
jQuery(document).ready(function ($) {
  var enviando_formulario = false;
  $("#form-arquivo").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = $("#btn-form-arquivo");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Aguarde...");
        },
        success: function success(data) {
          console.log(data);
          var response = $.parseJSON(data);

          if (response.status == "ok") {
            form.find(".campo").val("");
            location.href = response.retorno;
          } else {
            hideLoading();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
}); // REMOVER

var enviando_formulario = false;
$("#form-remove-arquivo").on("submit", function (e) {
  e.preventDefault();
  var obj = this;
  var form = $(obj);
  var dados = new FormData(obj);
  var idRemove = $("#id_remove").val();

  function volta_submit() {
    enviando_formulario = false;
    hideLoading();
  }

  if (!enviando_formulario) {
    $.ajax({
      url: form.attr("action"),
      type: form.attr("method"),
      data: dados,
      processData: false,
      cache: false,
      contentType: false,
      beforeSend: function beforeSend() {
        closeModal("modal-confirm");
        showLoading();
        enviando_formulario = true;
      },
      success: function success(data) {
        console.log(data);
        closeModal("modal-confirm");

        if (data == "ok") {
          $("#id_remove").val("");
          volta_submit();
          showAlert("Sucesso", "Arquivo removido com sucesso.", "success"); //$("#arquivo-" + idRemove).fadeOut();

          setTimeout(function () {
            location.href = $("#retorno_success").val();
          }, 1500);
        } else {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        }
      },
      error: function error(xhr, type, exception) {
        volta_submit();
        showAlert("Erro", "Não foi possível realizar essa operação.", "error");
        console.log("ajax error response type " + type);
      }
    });
  }
}); // TIPOS DE DOCUMENTO

(function () {
  "use strict";

  $("#tipo_doc").on("change", tipoDocHandle);
  tipoDocHandle();

  function tipoDocHandle() {
    if ($("#tipo_doc").length > 0) {
      var tipoDoc = $("#tipo_doc").val();

      if (tipoDoc == "9") {
        $(".document-desc-wrp").show();
        $(".document-desc-wrp").find("input").prop("required", true);
        $(".document-desc-wrp").find("input").prop("disabled", false);
      } else {
        $(".document-desc-wrp").hide();
        $(".document-desc-wrp").find("input").prop("required", false);
        $(".document-desc-wrp").find("input").prop("disabled", true);
      }

      if (tipoDoc) {
        $(".campo-icon-help-docs").show();
        $(".campo-icon-help-docs").data("modal", "modal-tipo-doc-" + tipoDoc);
      } else {
        $(".campo-icon-help-docs").hide();
        $(".campo-icon-help-docs").data("modal", "");
      }
    }
  }
})();
"use strict";

(function () {
  "use strict"; // CADASTRAR / EDITAR

  if ($("#dzupload-fotos").length > 0) {
    Dropzone.autoDiscover = false;
    var dzupload = $("#dzupload-fotos");
    var form = $("#form-fotos");
    var btn = $("#cad-fotos");
    var urlForm = form.attr("action");
    var maxFile = dzupload.data("maxfile");
    var maxSize = dzupload.data("maxsize");
    var required = dzupload.data("required") == "sim" ? true : false;
    dzupload.dropzone({
      url: urlForm,
      uploadMultiple: true,
      autoProcessQueue: false,
      parallelUploads: 100,
      timeout: 90000,
      paramName: "fotos",
      maxFilesize: 2048,
      maxFiles: maxFile,
      acceptedFiles: "image/*",
      addRemoveLinks: true,
      dictDefaultMessage: "Clique ou arraste para carregar as fotos",
      dictRemoveFile: "Remover",
      dictFileTooBig: "O tamanho do arquivo selecionado é maior do que o limite de <b>" + maxSize + "Mb</b>",
      dictInvalidFileType: "Tipo de arquivo inválido",
      dictMaxFilesExceeded: "Selecione no máximo <b>" + maxFile + "</b> fotos",
      dictResponseError: "server_error",
      init: function init() {
        var myDropzone = this; // Evento ao clicar no botão de cadastrar/atualizar

        btn.on("click", function (e) {
          e.preventDefault();
          e.stopPropagation(); // Valida o formulário

          if (form.parsley().validate()) {
            // Verifica se alguma imagem foi selecionada
            if (myDropzone.files.length > 0) {
              // Envia o formulário
              myDropzone.processQueue();
            } else {
              $(".dz-msg-error").html("É necessário cadastrar pelo menos uma foto.");
              scrollToX(".dz-msg-error");
            }
          }
        }); // Envio sendo processado

        myDropzone.on("sendingmultiple", function (file, xhr, formData) {
          // Resgata os dados do formulário
          var data = form.serializeArray();

          for (var i = 0; i < data.length; i++) {
            formData.append(data[i].name, data[i].value);
          }

          showLoading();
        }); // Sucesso

        myDropzone.on("successmultiple", function (files, response) {
          console.log(response);
          response = JSON.parse(response);

          if (response.status == "ok") {
            hideLoading();
            showAlert("Sucesso", "Fotos cadastradas com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 1500);
          } else {
            hideLoading();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        }); // Erro

        myDropzone.on("error", function (file, response) {
          console.log(response);
          myDropzone.removeFile(file);
          $(".dz-msg-error").html(response);
          scrollToX(".dz-msg-error");
          hideLoading();

          if (response == "server_error") {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        }); // Evento quando um arquivo é adicionado

        myDropzone.on("addedfile", function () {
          $(".dz-msg-error").html("");
          btn.parent(".btn-container").show();
        }); // Evento quando um arquivo é removido

        myDropzone.on("removedfile", function () {
          if (!myDropzone.files.length) {
            btn.parent(".btn-container").hide();
          }
        });
      }
    });
    $(".btn-concluir-fotos").on("click", function (ev) {
      ev.preventDefault();
      var acao = $(this).data("acao");
      var totalImg = $(".form-fotos li").length; //if (acao == "insert" && totalImg == 0) {
      //if (totalImg == 0) {

      if (totalImg < 5) {
        /* showAlert(
          "Atenção",
          'É necessário cadastrar pelo menos uma foto do seu imóvel. Selecione as fotos e clique no botão "Cadastrar Fotos".',
          "warning"
        ); */
        showAlert("Atenção", 'É necessário cadastrar pelo menos <b>5 fotos</b> do seu imóvel. Selecione as fotos e clique no botão "Cadastrar Fotos".', "warning");
        return false;
      } else {
        showLoading();
        location.href = $(this).attr("href");
      }
    });
  } // Exibe a confirmação ao clicar no botão tornar foto destaque


  $(".btn-dest").on("click", function (e) {
    e.preventDefault();
    var idDestaque = $(this).data("id");
    $("#id_destaque").val(idDestaque);
    openModal("modal-confirm2");
  }); // REMOVE FOTO

  var enviando_formulario = false;
  $("#form-remove-foto").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_remove").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_remove").val("");
            showAlert("Sucesso", "Foto removida com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // UPDATE FOTO

  var enviando_formulario = false;
  $("#form-update-foto").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idAtualiza = $("#id_destaque").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm2");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_destaque").val("");
            showAlert("Sucesso", "Ação realizada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
})(); // ORDEM DE EXIBIÇÃO


(function () {
  "use strict";

  if ($(".ordena-fotos-lista").length > 0) {
    new Sortable($(".ordena-fotos-lista")[0], {
      handle: "figure",
      animation: 150,
      forceFallback: true,
      onStart: function onStart() {
        $("body").addClass("grabbing");
        this._currentOrder = this.toArray();
      },
      onEnd: function onEnd() {
        $("body").removeClass("grabbing");
      },
      onUpdate: function onUpdate(ev) {
        var instance = this;
        var order = instance.toArray();
        instance.option("disabled", true);
        $.ajax({
          url: url_base + "acoes/app/proprietario/altera_ordem_exibicao_fotos.php",
          type: "POST",
          data: {
            ordem: order
          },
          success: function success(data) {
            console.log(data);
            instance.option("disabled", false);

            if (data == "ok") {
              console.log("Ordem alterada com sucesso.");
            } else {
              instance.sort(instance._currentOrder);
              showAlert("Erro", "Não foi possível realizar essa operação.", "error");
            }
          },
          error: function error(request, status, _error) {
            console.log(request.responseText);
            instance.option("disabled", false);
            instance.sort(instance._currentOrder);
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        });
      }
    });
  }
})();
"use strict";

// Mensagens
(function () {
  "use strict"; // Exibe a modal de resposta ao clicar no botão de responder

  $(".btn-responder").on("click", function (e) {
    e.preventDefault();
    var id = $(this).data("id");
    var usuario = $(this).data("usuario");
    var data = $(this).data("data");
    var mensagem = $(this).data("msg");
    $("#resposta_id").val(id);
    $("#resposta_usuario").text(usuario);
    $("#resposta_data").text(data);
    $("#resposta_msg").text(mensagem);
    openModal("modal-resposta");
  }); // Enviar resposta

  var enviando_formulario = false;
  $("#form-resposta").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);

    function volta_submit() {
      enviando_formulario = false;
      closeModal("modal-resposta");
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();

          if (data == "ok") {
            showAlert("Sucesso", "Resposta enviada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // REMOVE Mensagem

  var enviando_formulario = false;
  $("#form-remove-msg").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_remove").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();

          if (data == "ok") {
            $("#id_remove").val("");
            showAlert("Sucesso", "Mensagem removida com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
})();
"use strict";

(function () {
  "use strict"; // Verifica se o chat existe na página

  if ($(".chat").length > 0) {
    initChat();
  } // Inicia o chat


  function initChat() {
    $(".gotop").hide();
    scrollToX(".conta-footer");
  }

  $("#chat-anexo").on("change", function () {
    if ($(this).val() != "") {
      $("#chat-mensagem").prop("required", false).parsley().reset();
    }
  });
  var enviando_formulario = false; // Insert/Update

  $("#chat-form").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var submit_btn = form.find("#chat-btn-send");
    var submit_btn_text = submit_btn.text();
    var dados = new FormData(obj);

    function volta_submit() {
      submit_btn.attr("disabled", false);
      submit_btn.text(submit_btn_text);
      enviando_formulario = false; //hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          //showLoading();
          enviando_formulario = true;
          submit_btn.attr("disabled", true);
          submit_btn.text("Enviando...");
        },
        success: function success(data) {
          console.log(data);
          volta_submit();

          if (data == "ok") {
            showAlert("Sucesso", "Mensagem enviada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
})();
"use strict";

(function () {
  "use strict"; // REAGENDA VISITA

  $("#form-reagenda-visita").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_remove").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_remove").val("");
            showAlert("Sucesso", "Solicitação enviada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  }); // Exibe a confirmação ao clicar para confirmar uma visita

  $(".btn-confirm-vis").on("click", function (e) {
    e.preventDefault();
    var idVisita = $(this).data("id");
    $("#id_confirma").val(idVisita);
    openModal("modal-confirm2");
  }); // CONFIRMAR

  $("#form-confirmar-visita").on("submit", function (e) {
    e.preventDefault();
    var obj = this;
    var form = $(obj);
    var dados = new FormData(obj);
    var idRemove = $("#id_confirma").val();

    function volta_submit() {
      enviando_formulario = false;
      hideLoading();
    }

    if (!enviando_formulario) {
      $.ajax({
        url: form.attr("action"),
        type: form.attr("method"),
        data: dados,
        processData: false,
        cache: false,
        contentType: false,
        beforeSend: function beforeSend() {
          closeModal("modal-confirm2");
          showLoading();
          enviando_formulario = true;
        },
        success: function success(data) {
          //console.log(data);
          volta_submit();
          data = JSON.parse(data);

          if (data.status == "ok") {
            $("#id_confirma").val("");
            showAlert("Sucesso", "Visita confirmada com sucesso.", "success");
            setTimeout(function () {
              location.reload();
            }, 2000);
          } else {
            volta_submit();
            showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          }
        },
        error: function error(xhr, type, exception) {
          volta_submit();
          showAlert("Erro", "Não foi possível realizar essa operação.", "error");
          console.log("ajax error response type " + type);
        }
      });
    }
  });
})();
"use strict";

/* =================== ANIMATE SCROLL =================== */
// Adiciona uma classe aos elementos após o mesmos serem exibidos na tela
function animeScroll(target, animationClass) {
  var documentTop = $(document).scrollTop();
  var windowHeight = $(window).height();
  var offset = windowHeight - windowHeight / 4;
  target.each(function () {
    eleTop = $(this).offset().top;

    if (documentTop > eleTop - offset) {
      $(this).addClass(animationClass);
    }
  });
}

$(function () {
  AOS.init({
    duration: 700
  });
});
//# sourceMappingURL=script.min.js.map
